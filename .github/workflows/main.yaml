name: Teste Clair

on:
  workflow_dispatch:

jobs:
  createClairCache:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Actions Repository
        uses: actions/checkout@v4
        
      - name: Set permission
        run: |
          mkdir ${GITHUB_WORKSPACE}/clairdb
          sudo chmod -R 777 ${GITHUB_WORKSPACE}/clairdb

      - name: Calculate Volume Hash
        id: volume_hash
        run: |
          if [ -d "/tmp/clair-db-volume" ]; then
            VOLUME_HASH=$(find /tmp/clair-db-volume -type f -exec sha256sum {} + | sha256sum | awk '{ print $1 }')
          else
            VOLUME_HASH="empty"
          fi
          echo "VOLUME_HASH=${VOLUME_HASH}" >> $GITHUB_ENV

      - name: set cache DB
        uses: actions/cache@v3
        with:
          path: /tmp/clair-db-volume
          key: clair-db-cache-${{ runner.os }}-${{ env.VOLUME_HASH }}
          restore-keys: clair-db-cache-${{ runner.os }}-${{ env.VOLUME_HASH }}
    
    
          # Cria o diretório para o volume
      - name: Create Clair DB Directory
        run: mkdir -p /tmp/clair-db-volume
          
      # Configura o Docker e monta o volume
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Create Clair DB Volume
        run: docker volume create --name clair-db-volume -o type=none -o device=/tmp/clair-db-volume -o o=bind

      # Cria uma rede Docker para os containers se comunicarem
      - name: Create Docker Network
        run: docker network create clair-network

      - name: setup database
        shell: bash
        run: docker run --network clair-network -v clair-db-volume:/var/lib/postgresql/clair -p 5432:5432 -d --name db arminc/clair-db:$(date +%Y-%m-%d)

      - name: overwrite permission
        run: |
          sudo chmod -R 777 ${GITHUB_WORKSPACE}/clairdb

      - name: Listar diretório
        run: |
          cd ${GITHUB_WORKSPACE}/clairdb/
          ls

      - name: Wait for database
        run: |
          sleep 15

      - name: Run Clair
        shell: bash  
        run: |  
          docker run --network clair-network -p 6060:6060 --link db:postgres -d --name clair arminc/clair-local-scan:latest

      - name: Give permission
        run: chmod +x .github/workflows/clair-check.sh

      - name: Checking
        shell: bash
        run: |
          .github/workflows/clair-check.sh

      - name: Checking
        shell: bash
        run: |
            docker logs clair
            docker ps

      # Cria um Dockerfile para o clair-scanner
      - name: Create Clair Scanner Dockerfile
        run: |
          cat <<EOF > Dockerfile
          FROM amazonlinux:2
          RUN curl -L https://github.com/arminc/clair-scanner/releases/download/v12/clair-scanner_linux_amd64 -o clair-scanner && \
              chmod +x ./clair-scanner
          EOF

      # Constrói a imagem do clair-scanner
      - name: Build Clair Scanner Image
        run: docker build -t clair-scanner .

      # Executa o clair-scanner (evitando o máximo de bash)
      - name: Run Clair Scanner
        run: |
          CLAIR_IP=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' clair)
          docker pull ubuntu:21.10
          docker ps
          docker run \
            --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            --network clair-network
            --link clair:clair \
            clair-scanner \
            /bin/sh -c 'until curl -s http://clair:6060; do sleep 1; done && ./clair-scanner --ip 127.0.0.1 ubuntu:21.10'

      



      # Ajusta as permissões do diretório
      - name: Fix Permissions
        run: sudo chmod -R 777 /tmp/clair-db-volume